// ==========================================================================================
// Mixins
// ==========================================================================================

@function calculateRem($size) {
	$remSize: $size / 16px;
	@return $remSize * 1rem;
}

@mixin font-size($size) {
	font-size: $size;
	font-size: calculateRem($size);
}

@mixin opacity($opacity) {
	$opacity-ie: $opacity * 100;
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$opacity-ie})";
	filter: alpha(opacity=$opacity-ie);
	-moz-opacity: $opacity;
	-khtml-opacity: $opacity;
  	opacity: $opacity;
}

@mixin grayscale($grayscale: true ) {
	@if $grayscale == true {
		filter: url("data:image/svg+xml;utf8,&lt;svg xmlns=\'http://www.w3.org/2000/svg\'&gt;&lt;filter id=\'grayscale\'&gt;&lt;feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale");
		filter: gray;
		-webkit-filter: grayscale(100%);
	} @else if $grayscale == false {
    		filter: url("data:image/svg+xml;utf8,&lt;svg xmlns=\'http://www.w3.org/2000/svg\'&gt;&lt;filter id=\'grayscale\'&gt;&lt;feColorMatrix type=\'matrix\' values=\'1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale");
		-webkit-filter: grayscale(0%);
  	} @else {
    		@error "@include grayscale(boolean)";
  	}
}

@mixin tab-focus() {
	outline: thin dotted;
	outline: 5px auto -webkit-focus-ring-color;
	outline-offset: -2px;
}

@mixin doubly($margin) {
	& + & {
		margin-left: $margin;
		@content;
  	}
}

@mixin overlay() {
	position: relative;
	> div {
		position: relative;
		z-index: 2;
	}
	&:before {
		content: '';
		position: absolute;
		height: 100%;
		width: 100%;
		top: 0;
		left: 0;
		background-color: #000;
		opacity: 0.6;
	}
}

@mixin gpu() {
	transform: translate3d(0, 0, 0);
	backface-visibility: hidden;
	perspective: 1000;
}
